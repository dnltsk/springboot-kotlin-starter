buildscript {
	ext {
		kotlinVersion = '1.2.51'
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}


apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'org.dnltsk'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
	implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
	implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

test.testClassesDir = project.tasks.compileTestKotlin.destinationDir

jacoco {
	toolVersion = "0.8.1"
	reportsDir = file("$buildDir/JacocoReports")
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
	}
}