#
# CI/CD chain is heavily inspired by
# https://medium.com/@javierfernandes/continuous-deployment-con-docker-travis-heroku-c24042fb830b
#
# Required ENV variables on Travis CI:
#   - DOCKER_USERNAME - from dockerhub account
#   - DOCKER_PASSWORD - from dockerhub account
#   - HEROKU_APP_NAME
#   - HEROKU_USERNAME - ="_" because HEROKU_TOKEN is already associated with the actual username
#   - HEROKU_TOKEN    - token from the `heroku authorizations:create` command
#   - HEROKU_API_KEY  - API token from the Web GUI
#   - SENTRY_DSN      - Sentry's project specific data source name
#

sudo: required

language: java

jdk:
  - oraclejdk8

services:
  - docker

before_install:
  - wget -qO- https://toolbelt.heroku.com/install.sh | sh
  - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
  - echo "${HEROKU_TOKEN}" | docker login -u "${HEROKU_USERNAME}" --password-stdin registry.heroku.com

before_script:
  - chmod +x gradlew

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

script:
  - ./gradlew clean test
  - ./gradlew jacocoTestReport
  - bash <(curl -s https://codecov.io/bash)
  - docker build  --build-arg SENTRY_ENABLED=true --build-arg SENTRY_DSN=${SENTRY_DSN} . -t ${DOCKER_USERNAME}/springboot-kotlin-starter
  - docker tag ${DOCKER_USERNAME}/springboot-kotlin-starter registry.heroku.com/${HEROKU_APP_NAME}/web

deploy:
  provider: script
  script:
    docker push ${DOCKER_USERNAME}/springboot-kotlin-starter;
    docker push registry.heroku.com/${HEROKU_APP_NAME}/web;
    heroku container:release web --app ${HEROKU_APP_NAME}
  branch: master
